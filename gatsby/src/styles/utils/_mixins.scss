@import "../utils/variables";

@mixin flexbox($display: flex, $align-items: center, $justify-content: center, $flex-direction: row) {
    display: $display;
    align-items: $align-items;
    justify-content: $justify-content;
    flex-direction: $flex-direction;
}

@mixin align-horizontally($position: absolute, $bottom: 0) {
    position: $position;
    bottom: $bottom;
    left: 50%;
    transform: translateX(-50%);
}

@mixin grid($grid-gap: $gutter-size/2, $align-items: center, $justify-items: baseline) {
    display: grid;
    grid-gap: $grid-gap;
    align-items: $align-items;
    justify-items: $justify-items;
}

@mixin respond-to($media) {
    @if $media == phone {
        @media only screen and (max-width: $cvo-xs-screen) {
            @content;
        }
    } @else if $media == not-phone {
        @media only screen and (min-width: $cvo-xs-screen + 1) {
            @content;
        }
    } @else if $media == small {
        @media only screen and (max-width: $cvo-small-screen) {
            @content;
        }
    } @else if $media == not-small {
        @media only screen and (min-width: $cvo-small-screen + 1) {
            @content;
        }
    } @else if $media == medium {
        @media only screen and (max-width: $cvo-medium-screen) {
            @content;
        }
    } @else if $media == not-medium {
        @media only screen and (min-width: $cvo-medium-screen + 1) {
            @content;
        }
    } @else if $media == not-large {
        @media only screen and (max-width: $cvo-large-screen) {
            @content;
        }
    } @else if $media == large {
        @media only screen and (min-width: $cvo-large-screen + 1) {
            @content;
        }
    } @else if $media == xl {
        @media only screen and (min-width: $cvo-xl-screen + 1) {
            @content;
        }
    }
}

@mixin centerElement() {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin transition($animation: all) {
    transition: $animation $anim-time $anim-curve;
}

@mixin opacity($opacity: $opacity-hover) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}
